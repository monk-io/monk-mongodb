namespace: mongodb-sharded

mongodb-common:
  defines: runnable
  metadata:
    private: true
  services:
    mongo:
      container: mongodb
      port: 27017
      protocol: tcp
      host-port: <- `${host-port}`
  connections:
    mongo-1:
      runnable: mongodb-sharded/mongodb-1
      service: mongo
    mongo-2:
      runnable: mongodb-sharded/mongodb-2
      service: mongo
    mongo-3:
      runnable: mongodb-sharded/mongodb-3
      service: mongo
  containers:
    mongodb:
      image: mongo
      image-tag: <- `${mongo-image}`
      entrypoint: /usr/bin/mongod --bind_ip_all --replSet dbrs
      environment:
        - <- `MONGO_INITDB_ROOT_USERNAME=${mongo-init-username}`
        - <- `MONGO_INITDB_ROOT_PASSWORD=${mongo-init-password}`
      paths:
        - <- `${monk-volume-path}:/data/db`
  variables:
    mongo-image:
      value: <- $mongo-image-tag default("latest")
      type: string
    mongo-init-username:
      value: <- $mongodb-init-username default("mongo")
      type: string
    mongo-init-password:
      value: <- $mongodb-init-password default("password")
      type: string
    host-port:
      value: 27017
      type: int

mongodb-1:
  defines: runnable
  metadata:
    private: true
  readiness:
    code: |
      exec("mongodb", "/usr/bin/bash", "-c", "echo "rs.status().ok" | mongosh -u ${mongo-init-username} -p ${mongo-init-password} --quiet | grep 1") "1" contains?
    period: 10
    initialDelay: 5
  containers:
    mongodb:
      image: mongo
      image-tag: <- `${mongo-image}`
      entrypoint: /usr/bin/mongod --bind_ip_all --replSet dbrs
      environment:
        - <- `MONGO_INITDB_ROOT_USERNAME=${mongo-init-username}`
        - <- `MONGO_INITDB_ROOT_PASSWORD=${mongo-init-password}`
      paths:
        - <- `${monk-volume-path}:/data/db`
      hooks:
        container-started: create-cluster
  services:
    mongo:
      container: mongodb
      port: 27017
      protocol: tcp
      host-port: <- `${host-port}`
  connections:
    mongo-1:
      runnable: mongodb-sharded/mongodb-1
      service: mongo
    mongo-2:
      runnable: mongodb-sharded/mongodb-2
      service: mongo
    mongo-3:
      runnable: mongodb-sharded/mongodb-3
      service: mongo
  depends:
    wait-for:
      runnables:
        - mongodb-sharded/mongodb-2
        - mongodb-sharded/mongodb-3
  variables:
    mongo-image:
      value: <- $mongo-image-tag default("latest")
      type: string
    mongo-init-username:
      value: <- $mongodb-init-username default("mongo")
      type: string
    mongo-init-password:
      value: <- $mongodb-init-password default("password")
      type: string
    host-port:
      value: 27017
      type: int
    mongo1-url:
      type: string
      value: <- connection-hostname("mongo-1") ":" connection-port("mongo-1") concat-all
    mongo2-url:
      type: string
      value: <- connection-hostname("mongo-2") ":" connection-port("mongo-2") concat-all
    mongo3-url:
      type: string
      value: <- connection-hostname("mongo-3") ":" connection-port("mongo-3") concat-all
  files:
    init-script:
      container: mongodb
      mode: 0644
      path: /scripts/rs-init.sh
      contents: <<< files/rs-init.sh
  actions:
    create-cluster:
      code: exec("mongodb", "/bin/bash", "-c", `/scripts/rs-init.sh`)

mongodb-2:
  defines: runnable
  inherits: mongodb-sharded/mongodb-common
  metadata:
    private: true
  variables:
    host-port:
      value: 27018
      type: int

mongodb-3:
  defines: runnable
  inherits: mongodb-sharded/mongodb-common
  metadata:
    private: true
  variables:
    host-port:
      value: 27019
      type: int
